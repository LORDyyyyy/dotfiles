set termguicolors
lua require('lordyvim')


:set background=dark
:set termguicolors
:set number
:set autoindent
:set tabstop=4
:set shiftwidth=4
:set smarttab
:set softtabstop=4
:set mouse=a
:set modifiable
:set clipboard=unnamedplus


let mapleader = " "

set encoding=UTF-8

filetype plugin indent on

" Neotree keymap
nnoremap <C-f> :Neotree focus<CR>
nnoremap <C-b> :Neotree close<CR>
nnoremap <leader>s :Neotree float<cr>


" VCoolor - inserting colors
nnoremap <A-c> :VCoolor<CR>
nnoremap <A-v> :silent VCoolor ra <CR> 
let g:vcool_ins_rgba_map = '<A-v>'

" Switch between tabs, left and right
nnoremap <A-e> <C-w>l 
nnoremap <A-w> <C-w>h 


" Custom copy and paste, n => normal mode, v => visual mode
nnoremap <C-c> y
vnoremap <C-c> y
nnoremap <C-x> d
vnoremap <C-x> d


" Select all
nnoremap <C-a> ggVG


" Map :W to :w
command! -nargs=0 -bar W w
" Map :Wq to :wq
command! -nargs=0 -bar Wq wq
" Map :Q to :q
command! -nargs=0 -bar Q q


" Telescope 
nnoremap <leader>ff <cmd>Telescope find_files<cr>
nnoremap <leader>d <cmd>Telescope oldfiles<cr>
nnoremap <leader>q <cmd>Telescope live_grep<cr>



" Open on screen floating Terminal
nnoremap <leader>tt <cmd>lua require("nvterm.terminal").toggle "float"<cr>
" Save file then open floating Terminal
nnoremap <leader>ty :w<cr>:lua require("nvterm.terminal").toggle "float"<cr>
nnoremap <leader>uy :w<cr>:lua require("nvterm.terminal").toggle "horizontal"<cr>


" Keymaps cheat sheet
nnoremap <leader>w <cmd>WhichKey <cr>


" Navigation in code
nmap <F8> :TagbarToggle<CR>


" Auto JSON Formatter
nnoremap <C-j><C-j> <cmd>JSONFormatter <cr>


" Tabe, files tabs
nnoremap <silent>    <A-,> <Cmd>BufferPrevious<CR>
nnoremap <silent>    <A-.> <Cmd>BufferNext<CR>
nnoremap <silent>    <A-m> <Cmd>BufferClose<CR>
nnoremap <silent>    <A-n> <Cmd>BufferClose!<CR>


" Map Shift + End to select from cursor to the end of the line
nnoremap <S-End> v$
" Map Shift + Home to select from cursor to the beginning of the line
nnoremap <S-Home> v0
" Map Ctrl + Shift + Home to select from cursor to the beginning of the file
nnoremap <S-C-Home> :normal vgg0<CR>
" Map Ctrl + Shift + End to select from cursor to the end of the file
nnoremap <S-C-End> :normal vG$<CR>

" duplicate the line
nnoremap <S-T> :t.<CR>


" Trouble Toggle
nnoremap <leader>e <cmd>TroubleToggle<cr>


" Dashboard AKA Homepage
nnoremap <leader>h <cmd>Dashboard<cr>


" lsp go to Declaration and Definition
nnoremap <leader>gf :lua vim.lsp.buf.definition()<CR>
nnoremap <leader>gd :lua vim.lsp.buf.declaration()<CR>


" Markdown Preview
nmap <leader>md <cmd> MarkdownPreview <cr>
nmap <leader>mds <cmd> MarkdownPreviewStop <cr>

" LiveServer
nmap <leader>ls <cmd> LiveServerStart <cr>
nmap <leader>lss <cmd> LiveServerStop <cr>

:set completeopt-=preview " For No Previews



let g:lsp_zero_event_on_tab = 'close_menu'

" air-line
let g:airline_powerline_fonts = 1

if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif

" airline symbols
let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = ''


inoremap <expr> <Tab> pumvisible() ? coc#_select_confirm() : "<Tab>"



